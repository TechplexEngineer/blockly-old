// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.zh_cn');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "添加注释";
Blockly.Msg.CHANGE_VALUE_TITLE = "更改值：";
Blockly.Msg.COLLAPSE_ALL = "折叠块";
Blockly.Msg.COLLAPSE_BLOCK = "折叠块";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "颜色1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "颜色2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "比率";
Blockly.Msg.COLOUR_BLEND_TITLE = "混合";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Blends two colours together with a given ratio (0.0 - 1.0).";  // untranslated
Blockly.Msg.COLOUR_PICKER_HELPURL = "http://zh.wikipedia.org/wiki/颜色";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "从调色板中选择一种颜色。";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "随机颜色";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "随机选择一种颜色。";
Blockly.Msg.COLOUR_RGB_BLUE = "蓝色";
Blockly.Msg.COLOUR_RGB_GREEN = "绿色";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "红色";
Blockly.Msg.COLOUR_RGB_TITLE = "颜色带";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Create a colour with the specified amount of red, green, and blue.  All values must be between 0 and 100.";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#Loop_Termination_Blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "中断循环";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continue with next iteration of loop";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "中断包含它的循环。";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Skip the rest of this loop, and continue with the next iteration.";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Warning: This block may only be used within a loop.";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#for_each for each block";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST = "在列表中";
Blockly.Msg.CONTROLS_FOREACH_INPUT_INLIST_TAIL = "";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_INPUT_ITEM = "为每个项目";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "For each item in a list, set the variable '%1' to the item, and then do some statements.";  // untranslated
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://code.google.com/p/blockly/wiki/Loops#count_with";  // untranslated
Blockly.Msg.CONTROLS_FOR_INPUT_FROM_TO_BY = "由%3从%1至%2";
Blockly.Msg.CONTROLS_FOR_INPUT_WITH = "count with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Have the variable %1 take on the values from the start number to the end number, counting by the specified interval, and do the specified blocks.";  // untranslated
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Add a condition to the if block.";  // untranslated
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Add a final, catch-all condition to the if block.";  // untranslated
Blockly.Msg.CONTROLS_IF_HELPURL = "http://code.google.com/p/blockly/wiki/If_Then";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Add, remove, or reorder sections to reconfigure this if block.";  // untranslated
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "也";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "或者如果";
Blockly.Msg.CONTROLS_IF_MSG_IF = "如果";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "If a value is true, then do some statements.";  // untranslated
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "If a value is true, then do the first block of statements.  Otherwise, do the second block of statements.";  // untranslated
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "If the first value is true, then do the first block of statements.  Otherwise, if the second value is true, do the second block of statements.";  // untranslated
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "If the first value is true, then do the first block of statements.  Otherwise, if the second value is true, do the second block of statements.  If none of the values are true, do the last block of statements.";  // untranslated
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "http://zh.wikipedia.org/wiki/For回圈";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "做";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "重复 %1 次";
Blockly.Msg.CONTROLS_REPEAT_TITLE_REPEAT = "重复";
Blockly.Msg.CONTROLS_REPEAT_TITLE_TIMES = "时间";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "多次执行一些语句。";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "http://code.google.com/p/blockly/wiki/Repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "重复直到";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repeat while";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "只要值为假，执行一些语句。";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "只要值为真，执行一些语句。";
Blockly.Msg.DELETE_BLOCK = "删除块";
Blockly.Msg.DELETE_X_BLOCKS = "删除 %1 块";
Blockly.Msg.DISABLE_BLOCK = "禁用块";
Blockly.Msg.DUPLICATE_BLOCK = "复制";
Blockly.Msg.ENABLE_BLOCK = "启用块";
Blockly.Msg.EXPAND_ALL = "展开块";
Blockly.Msg.EXPAND_BLOCK = "展开块";
Blockly.Msg.EXTERNAL_INPUTS = "外部输入";
Blockly.Msg.HELP = "帮助";
Blockly.Msg.INLINE_INPUTS = "Inline Inputs";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "http://en.wikipedia.org/wiki/Linked_list#Empty_lists";
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "创建空的列表";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Returns a list, of length 0, containing no data records";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "列表";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Add, remove, or reorder sections to reconfigure this list block.";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "create list with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Add an item to the list.";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Create a list with any number of items.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_FIRST = "首次";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "#来自结束";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";
Blockly.Msg.LISTS_GET_INDEX_GET = "获得";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "get and remove";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_LAST = "最后";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "随机";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "移除";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "空白";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Returns the first item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Returns the item at the specified position in a list.  #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Returns the item at the specified position in a list.  #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Returns the last item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "随机返回列表中的一个项目。";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "移除并返回列表中的第一个项目。";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Removes and returns the item at the specified position in a list.  #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Removes and returns the item at the specified position in a list.  #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "移除并返回列表中的最后一个项目。";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "移除并返回列表中的一个随机项目中。";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Removes the first item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Removes the item at the specified position in a list.  #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Removes the item at the specified position in a list.  #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Removes the last item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Removes a random item in a list.";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "从结束至#";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "至#";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "至最后";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#Getting_a_sublist";
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "get sub-list from first";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "get sub-list from # from end";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "get sub-list from #";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "空白";
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Creates a copy of the specified portion of a list.";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_FIRST = "find first occurrence of item";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#Getting_Items_from_a_List";
Blockly.Msg.LISTS_INDEX_OF_LAST = "find last occurrence of item";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Returns the index of the first/last occurrence of the item in the list.  Returns 0 if text is not found.";  // untranslated
Blockly.Msg.LISTS_INLIST = "在列表中";
Blockly.Msg.LISTS_IS_EMPTY_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#is_empty";  // untranslated
Blockly.Msg.LISTS_IS_EMPTY_TITLE = "%1是空的";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#length_of";
Blockly.Msg.LISTS_LENGTH_TITLE = "%1的长度";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "返回列表的长度。";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#create_list_with";
Blockly.Msg.LISTS_REPEAT_TITLE = "create list with item %1 repeated %2 times";  // untranslated
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Creates a list consisting of the given value repeated the specified number of times.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://code.google.com/p/blockly/wiki/Lists#in_list_..._set";
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "作为";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "插入在";
Blockly.Msg.LISTS_SET_INDEX_SET = "设置";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserts the item at the start of a list.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserts the item at the specified position in a list.  #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserts the item at the specified position in a list.  #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Append the item to the end of a list.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserts the item randomly in a list.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Sets the item at the specified position in a list.  #1 is the last item.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Sets the item at the specified position in a list.  #1 is the first item.";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "设置列表中的最后一项。";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Sets a random item in a list.";  // untranslated
Blockly.Msg.LISTS_TOOLTIP = "Returns true if the list is empty.";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "错";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "http://code.google.com/p/blockly/wiki/True_False";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Returns either true or false.";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "正";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "http://zh.wikipedia.org/wiki/不等";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Return true if both inputs equal each other.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Return true if the first input is greater than the second input.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Return true if the first input is greater than or equal to the second input.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Return true if the first input is smaller than the second input.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Return true if the first input is smaller than or equal to the second input.";  // untranslated
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Return true if both inputs are not equal to each other.";  // untranslated
Blockly.Msg.LOGIC_NEGATE_HELPURL = "http://code.google.com/p/blockly/wiki/Not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "并非%1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Returns true if the input is false.  Returns false if the input is true.";  // untranslated
Blockly.Msg.LOGIC_NULL = "满";
Blockly.Msg.LOGIC_NULL_HELPURL = "http://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "返回空值。";
Blockly.Msg.LOGIC_OPERATION_AND = "和";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "http://code.google.com/p/blockly/wiki/And_Or";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "或";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Return true if both inputs are true.";  // untranslated
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Return true if at least one of the inputs is true.";  // untranslated
Blockly.Msg.LOGIC_TERNARY_CONDITION = "测试";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "http://zh.wikipedia.org/wiki/条件运算符";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "如果无效";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "如果正确";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Check the condition in 'test'. If the condition is true, returns the 'if true' value; otherwise returns the 'if false' value.";  // untranslated
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "http://zh.wikipedia.org/wiki/算术";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Return the sum of the two numbers.";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Return the quotient of the two numbers.";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Return the difference of the two numbers.";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Return the product of the two numbers.";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Return the first number raised to the power of the second number.";  // untranslated
Blockly.Msg.MATH_CHANGE_HELPURL = "http://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
Blockly.Msg.MATH_CHANGE_INPUT_BY = "由";
Blockly.Msg.MATH_CHANGE_TITLE_CHANGE = "更改";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Add a number to variable '%1'.";  // untranslated
Blockly.Msg.MATH_CONSTANT_HELPURL = "http://zh.wikipedia.org/wiki/数学常数";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Return one of the common constants: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (infinity).";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "http://en.wikipedia.org/wiki/Clamping_%28graphics%29";
Blockly.Msg.MATH_CONSTRAIN_TITLE = "constrain %1 low %2 high %3";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Constrain a number to be between the specified limits (inclusive).";  // untranslated
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "is divisible by";  // untranslated
Blockly.Msg.MATH_IS_EVEN = "乃至于";
Blockly.Msg.MATH_IS_NEGATIVE = "为负";
Blockly.Msg.MATH_IS_ODD = "是奇特的";
Blockly.Msg.MATH_IS_POSITIVE = "is positive";  // untranslated
Blockly.Msg.MATH_IS_PRIME = "是总理";
Blockly.Msg.MATH_IS_TOOLTIP = "Check if a number is an even, odd, prime, whole, positive, negative, or if it is divisible by certain number.  Returns true or false.";  // untranslated
Blockly.Msg.MATH_IS_WHOLE = "为整数";
Blockly.Msg.MATH_MODULO_HELPURL = "http://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
Blockly.Msg.MATH_MODULO_TITLE = "remainder of %1 ÷ %2";  // untranslated
Blockly.Msg.MATH_MODULO_TOOLTIP = "Return the remainder from dividing the two numbers.";  // untranslated
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "http://zh.wikipedia.org/wiki/数字";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "一个数字。";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "列表中的平均数";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "列表最大值";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "列表中位数";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "列表最小值";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "列表模式";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "列表的随机项";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "standard deviation of list";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "列表中的数的总和";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Return the average (arithmetic mean) of the numeric values in the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "返回列表中最大数。";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Return the median number in the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "返回列表中最小数。";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Return a list of the most common item(s) in the list.";  // untranslated
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "从列表中返回一个随机的元素。";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "返回列表的标准偏差。";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "返回列表中的所有数字的和。";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "http://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "随机分数";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Return a random fraction between 0.0 (inclusive) and 1.0 (exclusive).";  // untranslated
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "http://zh.wikipedia.org/wiki/随机数发生器";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "random integer from %1 to %2";  // untranslated
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Return a random integer between the two specified limits, inclusive.";  // untranslated
Blockly.Msg.MATH_ROUND_HELPURL = "http://zh.wikipedia.org/wiki/四舍五入";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "向下舍入";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "向下舍入";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "向上舍入";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Round a number up or down.";  // untranslated
Blockly.Msg.MATH_SINGLE_HELPURL = "http://zh.wikipedia.org/wiki/平方根";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "绝对";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "平方根";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "返回一个数的绝对值。";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Return e to the power of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Return the natural logarithm of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Return the base 10 logarithm of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Return the negation of a number.";  // untranslated
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "返回数的10次幂。";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Return the square root of a number.";  // untranslated
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "http://zh.wikipedia.org/wiki/三角函数";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Return the arccosine of a number.";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Return the arcsine of a number.";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Return the arctangent of a number.";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Return the cosine of a degree (not radian).";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Return the sine of a degree (not radian).";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Return the tangent of a degree (not radian).";  // untranslated
Blockly.Msg.NEW_VARIABLE = "新变量...";
Blockly.Msg.NEW_VARIABLE_TITLE = "新变量的名称：";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "空白";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "与：";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "空白";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "http://zh.wikipedia.org/wiki/子程序";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Run the user-defined function '%1'.";  // untranslated
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "http://zh.wikipedia.org/wiki/子程序";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Run the user-defined function '%1' and use its output.";  // untranslated
Blockly.Msg.PROCEDURES_CREATE_DO = "创建'%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "空白";
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "http://zh.wikipedia.org/wiki/子程序";
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "做点什么";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "至";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Creates a function with no output.";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "http://zh.wikipedia.org/wiki/子程序";
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "返回";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Creates a function with an output.";  // untranslated
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warning: This function has duplicate parameters.";  // untranslated
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Highlight function definition";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "If a value is true, then return a second value.";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warning: This block may be used only within a function definition.";  // untranslated
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "输入名称：";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "投入";
Blockly.Msg.REMOVE_COMMENT = "删除注释";
Blockly.Msg.RENAME_VARIABLE = "重命名变量...";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Rename all '%1' variables to:";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "追加文本";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_modification";
Blockly.Msg.TEXT_APPEND_TO = "至";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "将一些文本追加到变量“%1”。";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Adjusting_text_case";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "为小写";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "为首字母大写";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "为大写";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Return a copy of the text in a different case.";  // untranslated
Blockly.Msg.TEXT_CHARAT_FIRST = "获得第一个信件";
Blockly.Msg.TEXT_CHARAT_FROM_END = "get letter # from end";  // untranslated
Blockly.Msg.TEXT_CHARAT_FROM_START = "获得信件#";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Extracting_text";
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "于文本中";
Blockly.Msg.TEXT_CHARAT_LAST = "获得最后信件";
Blockly.Msg.TEXT_CHARAT_RANDOM = "获取随机的字母";
Blockly.Msg.TEXT_CHARAT_TAIL = "空白";
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Returns the letter at the specified position.";  // untranslated
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "在文本中加入项。";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "加入";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Add, remove, or reorder sections to reconfigure this text block.";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "从最后至信件#";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "到字符#";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "至最后信件";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "http://code.google.com/p/blockly/wiki/Text#Extracting_a_region_of_text";
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "于文本中";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "get substring from first letter";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "get substring from letter # from end";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "get substring from letter #";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "空白";
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Returns a specified portion of the text.";  // untranslated
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Finding_text";
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "于文本中";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "find first occurrence of text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "find last occurrence of text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TAIL = "空白";
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Returns the index of the first/last occurrence of first text in the second text.  Returns 0 if text is not found.";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Checking_for_empty_text";
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1是空的";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "如果提供的文本为空，则返回真。";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_creation";
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "create text with";  // untranslated
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Create a piece of text by joining together any number of items.";  // untranslated
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Text_modification";
Blockly.Msg.TEXT_LENGTH_TITLE = "%1的长度";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Returns the number of letters (including spaces) in the provided text.";  // untranslated
Blockly.Msg.TEXT_PRINT_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Printing_text";
Blockly.Msg.TEXT_PRINT_TITLE = "打印%1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Print the specified text, number or other value.";  // untranslated
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Getting_input_from_the_user";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Prompt for user for a number.";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Prompt for user for some text.";  // untranslated
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "prompt for number with message";  // untranslated
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "prompt for text with message";  // untranslated
Blockly.Msg.TEXT_TEXT_HELPURL = "http://zh.wikipedia.org/wiki/字符串";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "A letter, word, or line of text.";  // untranslated
Blockly.Msg.TEXT_TRIM_HELPURL = "https://code.google.com/p/blockly/wiki/Text#Trimming_%28removing%29_spaces";
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "trim spaces from both sides";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "trim spaces from left side";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "trim spaces from right side";  // untranslated
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Return a copy of the text with spaces removed from one or both ends.";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "项";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "创建'获得%1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "http://code.google.com/p/blockly/wiki/Variables#Get";  // untranslated
Blockly.Msg.VARIABLES_GET_TAIL = "空白";
Blockly.Msg.VARIABLES_GET_TITLE = "空白";
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Returns the value of this variable.";  // untranslated
Blockly.Msg.VARIABLES_SET_CREATE_GET = "创建'获得%1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "http://code.google.com/p/blockly/wiki/Variables#Set";
Blockly.Msg.VARIABLES_SET_TAIL = "至";
Blockly.Msg.VARIABLES_SET_TITLE = "设置";
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Sets this variable to be equal to the input.";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.VARIABLES_SET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;