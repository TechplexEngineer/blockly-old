{namespace turtlepage}

/**
 * This is a Closure Template.  Build multilingually:
 *
 * # Create en.js.
 * java -jar ../_soy/SoyToJsSrcCompiler.jar --outputPathFormat en.js --srcs template.soy
 *
 * # Extract messages from template.soy.
 * java -jar ../_soy/SoyMsgExtractor.jar --outputFile extracted_msgs.xlf template.soy
 *
 * # Create en.json, qqq.json.
 * ../../i18n/xliff_to_json.py extracted_msgs.xlf
 *
 * Once translations have been made into <LANG>.json:
 *
 * # Create *.xlf.  By default, qqq.json and keys.json are skipped.
 * ../../i18n/json_to_xliff.py *.json
 *
 * # Create .js files by running script recommended by previous command.  It will
 * # start with "java -jar ../../apps/_soy/SoyToJsSrcCompiler.jar".
 *
 * # The .xlf files may be deleted.  They should not be checked in.
 * rm *.xlf
 */

/**
 * Web page structure.
 */
{template .start}
  <div id="MSG" style="display: none">
    // Block text.
    <span id="moveForward">{msg meaning="Turtle.moveForward" desc="TODO"}move forward by{/msg}</span>
    <span id="moveBackward">{msg meaning="Turtle.moveBackward" desc="TODO"}move backward by{/msg}</span>
    <span id="turnRight">{msg meaning="Turtle.turnRight" desc="TODO"}turn right by{/msg}</span>
    <span id="turnLeft">{msg meaning="Turtle.turnLeft" desc="TODO"}turn left by{/msg}</span>
    <span id="setWidth">{msg meaning="Turtle.setWidth" desc="TODO"}set width{/msg}</span>
    <span id="setColour">{msg meaning="Turtle.setColour" desc="TODO"}set colour{/msg}</span>
    <span id="penUp">{msg meaning="Turtle.penUp" desc="TODO"}pen up{/msg}</span>
    <span id="penDown">{msg meaning="Turtle.penDown" desc="TODO"}pen down{/msg}</span>
    <span id="hideTurtle">{msg meaning="Turtle.hideTurtle" desc="TODO"}hide turtle{/msg}</span>
    <span id="showTurtle">{msg meaning="Turtle.showTurtle" desc="TODO"}show turtle{/msg}</span>
    <span id="print">{msg meaning="Turtle.print" desc="TODO"}print{/msg}</span>
    <span id="font">{msg meaning="Turtle.font" desc="TODO"}font{/msg}</span>
    <span id="fontSize">{msg meaning="Turtle.fontSize" desc="TODO"}size{/msg}</span>
    <span id="fontNormal">{msg meaning="Turtle.fontNormal" desc="TODO"}normal{/msg}</span>
    <span id="fontBold">{msg meaning="Turtle.fontBold" desc="TODO"}bold{/msg}</span>
    <span id="fontItalic">{msg meaning="Turtle.fontItalic" desc="TODO"}italic{/msg}</span>
    // Tooltips for general blocks.
    <span id="moveTooltip">{msg meaning="Turtle.moveTooltip" desc="TODO"}Moves the turtle forward or backward by the specified amount.{/msg}</span>
    <span id="turnTooltip">{msg meaning="Turtle.turnTooltip" desc="TODO"}Turns the turtle left or right by the specified number of degrees.{/msg}</span>
    <span id="widthTooltip">{msg meaning="Turtle.widthTooltip" desc="TODO"}Changes the width of the pen.{/msg}</span>
    <span id="penTooltip">{msg meaning="Turtle.penTooltip" desc="TODO"}Lifts or lowers the pen, to start or stop drawing.{/msg}</span>
    <span id="colourTooltip">{msg meaning="Turtle.colourTooltip" desc="TODO"}Changes the colour of the pen.{/msg}</span>
    <span id="turtleVisibilityTooltip">{msg meaning="Turtle.turtleVisibilityTooltip" desc="TODO"}Makes the turtle (green circle and arrow) visible or invisible.{/msg}</span>
    <span id="printTooltip">{msg meaning="Turtle.printTooltip" desc="TODO"}Draws text in the turtle's direction at its location.{/msg}</span>
    <span id="fontTooltip">{msg meaning="Turtle.fontTooltip" desc="TODO"}Sets the font used by the print block.{/msg}</span>
    <span id="codeTooltip">{msg meaning="Turtle.codeTooltip" desc="TODO"}See generated JavaScript code.{/msg}</span>
    // HelpUrl links.
    <span id="printHelpUrl">{msg meaning="Turtle.printHelpUrl" desc="TODO"}http://en.wikipedia.org/wiki/Printing{/msg}</span>
    <span id="fontHelpUrl">{msg meaning="Turtle.fontHelpUrl" desc="TODO"}http://en.wikipedia.org/wiki/Font{/msg}</span>
    // Misc text.
    <span id="unloadWarning">{msg meaning="Turtle.unloadWarning" desc="TODO"}Leaving this page will result in the loss of your work.{/msg}</span>
  </div>

  // Common messages follow.  They are inlined here and in the other
  // apps/*/template.soy files instead of being shared in the parent directory
  // in order to avoid:
  // - loading an additional file over the network.
  // - keeping track of which languages have translated common messages.
  // These reference the messages in maze to minimize extra work for
  // translators.
  <div id="COMMON_MSG" style="display: none">
    // Suffix "Message" distinguishes id from other uses of "Blockly".
    <span id="blocklyMessage">{{msg meaning="Apps.blocklyMessage" desc="The project name.  If readers of your language would know approximately how to pronounce 'Blockly', leave unchanged.  Otherwise, include a transliteration in parentheses, such as the Russian: 'Blockly (Блoкли)'.  This should be identical to {lb}{lb}msg-blockly|Maze-Apps.blocklyMessage{rb}{rb}."}}Blockly{{/msg}}</span>
    <span id="httpRequestError">{{msg meaning="Apps.httpRequestError" desc="alert - The URL is invalid or a server error occurred.  This message will be followed by technical information useful to engineers trying to understand the problem.  This should be identical to {lb}{lb}msg-blockly|Maze-Apps.httpRequestError{rb}{rb}"}}There was a problem with the request.{{/msg}}</span>
    <span id="linkAlert">{{msg meaning="Apps.linkAlert" desc="alert - After the user has pressed a button to save his/her program, this provides the URL (%1) to retrieve the program.  The characters '\n\n' indicate that a blank line will be displayed before the URL (in English).  Leave those in unless you move %1 to the beginning or middle of the text, in which case you should use your judgment about where blank lines would be most useful.  This should be identical to {lb}{lb}msg-blockly|Maze-Apps.linkAlert{rb}{rb}."}}Share your blocks with this link:\n\n%1{{/msg}}</span>
    <span id="hashError">{{msg meaning="Apps.hashError" desc="alert - A request to retrieve a stored program does not have a valid URL. %1 is the invalid portion of the URL. 'Blockly' is the name of the system.  It should be left untranslated or it should be transliterated.  This should be identical to {lb}{lb}msg-blockly|Maze-Apps.hashError{rb}{rb}."}}Sorry, '%1' doesn't correspond with any saved Blockly file.{{/msg}}</span>
    <span id="xmlError">{{msg meaning="Apps.xmlError" desc="alert - There was a problem loading a file previously saved by the user.  The most likely reason for the problem is that it was created with an earlier, incompatible version of Blockly.  This message will be folllowed by technical information useful to engineers trying to understand the problem.  This should be identical to {lb}{lb}msg-blockly|Maze-Apps.xmlError{rb}{rb}."}}Could not load your saved file.  Perhaps it was created with a different version of Blockly?{/msg}</span>
  </div>

  <table width="100%" height="100%">
    <tr height="50">
      <td colspan=2>
        <h1><a href="../index.html">Blockly</a>
            {sp}:{sp}
            {msg meaning="Turtle.title" desc="TODO"}Turtle Graphics{/msg}</h1>
      </td>
    </tr>
    <tr>
      <td width="410" valign="top">
        <div>
          <canvas id="scratch" width="400" height="400" style="display: none"></canvas>
          <canvas id="display" width="400" height="400"></canvas>
        </div>
        <table style="padding-top: 1em;">
          <tr>
            <td style="width: 190px; text-align: center; vertical-align: top;">
              <script type="text/javascript" src="../slider.js"></script>
              <svg
                 id="slider"
                 xmlns="http://www.w3.org/2000/svg"
                 xmlns:svg="http://www.w3.org/2000/svg"
                 xmlns:xlink="http://www.w3.org/1999/xlink"
                 version="1.1"
                 width="150"
                 height="50">
                <!-- Slow icon. -->
                <clipPath id="slowClipPath">
                  <rect width=26 height=12 x=5 y=14 />
                </clipPath>
                <image xlink:href="icons.png" height=42 width=84 x=-21 y=-10
                    clip-path="url(#slowClipPath)" />
                <!-- Fast icon. -->
                <clipPath id="fastClipPath">
                  <rect width=26 height=16 x=120 y=10 />
                </clipPath>
                <image xlink:href="icons.png" height=42 width=84 x=120 y=-11
                    clip-path="url(#fastClipPath)" />
              </svg>
            </td>
            <td style="width: 15px;">
              <img id="spinner" style="visibility: hidden;" src="loading.gif" height=15 width=15>
            </td>
            <td style="width: 190px; text-align: center">
              <button id="runButton" class="launch" onclick="Turtle.runButtonClick();">
                <img src="../../media/1x1.gif" class="run icon21">{msg meaning="Turtle.runProgram" desc="TODO"}Run Program{/msg}
              </button>
              <button id="resetButton" class="launch" onclick="Turtle.resetButtonClick();" style="display: none">
                <img src="../../media/1x1.gif" class="stop icon21">{msg meaning="Turtle.resetProgram" desc="TODO"}Reset{/msg}
              </button>
            </td>
          </tr>
        </table>

        <div id="toolbarDiv">
          <button title="{msg meaning="Turtle.codeTooltip" desc="TODO"}See generated JavaScript code.{/msg}" onclick="BlocklyApps.showCode();">
            <img src='../../media/1x1.gif' class="code icon21">
          </button>
          <button id="linkButton" title="{msg meaning="Turtle.linkTooltip" desc="TODO"}Save and link to blocks.{/msg}" onclick="BlocklyStorage.link();">
            <img src='../../media/1x1.gif' class="link icon21">
          </button>
          <button id="captureButton" title="{msg meaning="Turtle.captureTooltip" desc="TODO"}Save the drawing.{/msg}" onclick="Turtle.createImageLink();">
            <img src='../../media/1x1.gif' class="img icon21">
          </button>
          <a id="downloadImageLink" download="{msg meaning="Turtle.imgFilename" desc="TODO"}drawing.png{/msg}"></a>
        </div>
      </td>
      <td valign="top">
        <script type="text/javascript" src="../../blockly_compressed.js"></script>
        <script type="text/javascript" src="../../javascript_compressed.js"></script>
        <script type="text/javascript">
          BlocklyApps.loadLanguageScripts(languageSrc);
        </script>
        <script type="text/javascript" src="blocks.js"></script>
        {call .toolbox /}
        <div id="blockly"></div>
      </td>
    </tr>
  </table>
{/template}

/**
 * Toolbox.
 */
{template .toolbox}
  <xml id="toolbox" style="display: none">
    <category name="{msg meaning="Turtle.catTurtle" desc="TODO"}Turtle{/msg}">
      <block type="draw_move">
        <value name="VALUE">
          <block type="math_number">
            <title name="NUM">10</title>
          </block>
        </value>
      </block>
      <block type="draw_turn">
        <value name="VALUE">
          <block type="math_number">
            <title name="NUM">90</title>
          </block>
        </value>
      </block>
      <block type="draw_width">
        <value name="WIDTH">
          <block type="math_number">
            <title name="NUM">1</title>
          </block>
        </value>
      </block>
      <block type="draw_pen"></block>
      <block type="turtle_visibility"></block>
      <block type="draw_print">
        <value name="TEXT">
          <block type="text"></block>
        </value>
      </block>
      <block type="draw_font"></block>
    </category>
    <category name="{msg meaning="Turtle.catColour" desc="TODO"}Colour{/msg}">
      <block type="draw_colour">
        <value name="COLOUR">
          <block type="colour_picker"></block>
        </value>
      </block>
      <block type="colour_picker"></block>
      <block type="colour_random"></block>
      <block type="colour_rgb"></block>
      <block type="colour_blend"></block>
    </category>
    <category name="{msg meaning="Turtle.catControl" desc="TODO"}Control{/msg}">
      <block type="controls_if"></block>
      <block type="controls_repeat_ext">
        <value name="TIMES">
          <block type="math_number">
            <title name="NUM">10</title>
          </block>
        </value>
      </block>
      <block type="controls_whileUntil"></block>
      <block type="controls_for">
        <value name="FROM">
          <block type="math_number">
            <title name="NUM">1</title>
          </block>
        </value>
        <value name="TO">
          <block type="math_number">
            <title name="NUM">10</title>
          </block>
        </value>
        <value name="BY">
          <block type="math_number">
            <title name="NUM">1</title>
          </block>
        </value>
      </block>
      <block type="controls_forEach"></block>
      <block type="controls_flow_statements"></block>
    </category>
    <category name="{msg meaning="Turtle.catLogic" desc="TODO"}Logic{/msg}">
      <block type="logic_compare"></block>
      <block type="logic_operation"></block>
      <block type="logic_negate"></block>
      <block type="logic_boolean"></block>
      <block type="logic_ternary"></block>
    </category>
    <category name="{msg meaning="Turtle.catMath" desc="TODO"}Math{/msg}">
      <block type="math_number"></block>
      <block type="math_arithmetic"></block>
      <block type="math_single"></block>
      <block type="math_trig"></block>
      <block type="math_constant"></block>
      <block type="math_number_property"></block>
      <block type="math_change">
        <value name="DELTA">
          <block type="math_number">
            <title name="NUM">1</title>
          </block>
        </value>
      </block>
      <block type="math_round"></block>
      <block type="math_on_list"></block>
      <block type="math_modulo"></block>
      <block type="math_constrain">
        <value name="LOW">
          <block type="math_number">
            <title name="NUM">1</title>
          </block>
        </value>
        <value name="HIGH">
          <block type="math_number">
            <title name="NUM">100</title>
          </block>
        </value>
      </block>
      <block type="math_random_int">
        <value name="FROM">
          <block type="math_number">
            <title name="NUM">1</title>
          </block>
        </value>
        <value name="TO">
          <block type="math_number">
            <title name="NUM">100</title>
          </block>
        </value>
      </block>
      <block type="math_random_float"></block>
    </category>
    <category name="{msg meaning="Turtle.catLists" desc="TODO"}Lists{/msg}">
      <block type="lists_create_empty"></block>
      <block type="lists_create_with"></block>
      <block type="lists_repeat">
        <value name="NUM">
          <block type="math_number">
            <title name="NUM">5</title>
          </block>
        </value>
      </block>
      <block type="lists_length"></block>
      <block type="lists_isEmpty"></block>
      <block type="lists_indexOf">
        <value name="VALUE">
          <block type="variables_get">
            <title name="VAR">list</title>
          </block>
        </value>
      </block>
      <block type="lists_getIndex">
        <value name="VALUE">
          <block type="variables_get">
            <title name="VAR">list</title>
          </block>
        </value>
      </block>
      <block type="lists_setIndex">
        <value name="LIST">
          <block type="variables_get">
            <title name="VAR">list</title>
          </block>
        </value>
      </block>
      <block type="lists_getSublist">
        <value name="LIST">
          <block type="variables_get">
            <title name="VAR">list</title>
          </block>
        </value>
      </block>
    </category>
    <category name="{msg meaning="Turtle.catVariables" desc="TODO"}Variables{/msg}" custom="VARIABLE"></category>
    <category name="{msg meaning="Turtle.catProcedures" desc="TODO"}Functions{/msg}" custom="PROCEDURE"></category>
  </xml>
{/template}
