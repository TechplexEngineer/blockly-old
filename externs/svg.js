/**
 * @fileoverview Generated by externs/gen/gen.pl using externs/gen/svg.conf.
 * Please do not edit by hand.
 */



/**
 * @constructor
 * @extends {Element}
 */
function SVGElement() {}
/** @type {string} */ SVGElement.prototype.id;
/** @type {string} */ SVGElement.prototype.xmlbase;
/** @type {SVGSVGElement} */ SVGElement.prototype.ownerSVGElement;
/** @type {SVGElement} */ SVGElement.prototype.viewportElement;



/**
 * @interface
 */
function SVGLangSpace() {}
/** @type {string} */ SVGLangSpace.prototype.xmllang;
/** @type {string} */ SVGLangSpace.prototype.xmlspace;



/**
 * @interface
 */
function SVGAnimatedBoolean() {}
/** @type {boolean} */ SVGAnimatedBoolean.prototype.baseVal;
/** @type {boolean} */ SVGAnimatedBoolean.prototype.animVal;



/**
 * @interface
 */
function SVGExternalResourcesRequired() {}
/** @type {SVGAnimatedBoolean} */ SVGExternalResourcesRequired.prototype.externalResourcesRequired;



/**
 * @interface
 */
function SVGAnimatedString() {}
/** @type {string} */ SVGAnimatedString.prototype.baseVal;
/** @type {string} */ SVGAnimatedString.prototype.animVal;



/**
 * @interface
 */
function SVGStylable() {}
/** @type {SVGAnimatedString} */ SVGStylable.prototype.className;
/** @type {CSSStyleDeclaration} */ SVGStylable.prototype.style;

/**
 * @param {string} name
 * @return {CSSValue}
 */
SVGStylable.prototype.getPresentationAttribute = function(name) {};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGGElement() {}
// Members of SVGTests
/** @type {SVGStringList} */ SVGGElement.prototype.requiredFeatures;
/** @type {SVGStringList} */ SVGGElement.prototype.requiredExtensions;
/** @type {SVGStringList} */ SVGGElement.prototype.systemLanguage;

/**
 * @param {string} extension
 * @return {boolean}
 */
SVGGElement.prototype.hasExtension = function(extension) {};
// Members of SVGLangSpace
/** @type {string} */ SVGGElement.prototype.xmllang;
/** @type {string} */ SVGGElement.prototype.xmlspace;
// Members of SVGExternalResourcesRequired
/** @type {SVGAnimatedBoolean} */ SVGGElement.prototype.externalResourcesRequired;
// Members of SVGStylable
/** @type {SVGAnimatedString} */ SVGGElement.prototype.className;
/** @type {CSSStyleDeclaration} */ SVGGElement.prototype.style;

/**
 * @param {string} name
 * @return {CSSValue}
 */
SVGGElement.prototype.getPresentationAttribute = function(name) {};
// Members of SVGTransformable
/** @type {SVGAnimatedTransformList} */ SVGGElement.prototype.transform;
// Members of SVGLocatable
/** @type {SVGElement} */ SVGGElement.prototype.nearestViewportElement;
/** @type {SVGElement} */ SVGGElement.prototype.farthestViewportElement;

/**
 * @return {SVGRect}
 */
SVGGElement.prototype.getBBox = function() {};

/**
 * @return {SVGMatrix}
 */
SVGGElement.prototype.getCTM = function() {};

/**
 * @return {SVGMatrix}
 */
SVGGElement.prototype.getScreenCTM = function() {};

/**
 * @param {SVGElement} element
 * @throws {SVGException}
 * @return {SVGMatrix}
 */
SVGGElement.prototype.getTransformToElement = function(element) {};



/**
 * @interface
 */
function SVGNumberList() {}
/** @type {number} */ SVGNumberList.prototype.numberOfItems;

/**
 * @throws {DOMException}
 */
SVGNumberList.prototype.clear = function() {};

/**
 * @param {SVGNumber} newItem
 * @throws {DOMException}
 * @return {SVGNumber}
 */
SVGNumberList.prototype.initialize = function(newItem) {};

/**
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGNumber}
 */
SVGNumberList.prototype.getItem = function(index) {};

/**
 * @param {SVGNumber} newItem
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGNumber}
 */
SVGNumberList.prototype.insertItemBefore = function(newItem, index) {};

/**
 * @param {SVGNumber} newItem
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGNumber}
 */
SVGNumberList.prototype.replaceItem = function(newItem, index) {};

/**
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGNumber}
 */
SVGNumberList.prototype.removeItem = function(index) {};

/**
 * @param {SVGNumber} newItem
 * @throws {DOMException}
 * @return {SVGNumber}
 */
SVGNumberList.prototype.appendItem = function(newItem) {};



/**
 * @constructor
 * @extends {SVGTextPositioningElement}
 * @implements {SVGTransformable}
 */
function SVGTextElement() {}
// Members of SVGTransformable
/** @type {SVGAnimatedTransformList} */ SVGTextElement.prototype.transform;
// Members of SVGLocatable
/** @type {SVGElement} */ SVGTextElement.prototype.nearestViewportElement;
/** @type {SVGElement} */ SVGTextElement.prototype.farthestViewportElement;

/**
 * @return {SVGRect}
 */
SVGTextElement.prototype.getBBox = function() {};

/**
 * @return {SVGMatrix}
 */
SVGTextElement.prototype.getCTM = function() {};

/**
 * @return {SVGMatrix}
 */
SVGTextElement.prototype.getScreenCTM = function() {};

/**
 * @param {SVGElement} element
 * @throws {SVGException}
 * @return {SVGMatrix}
 */
SVGTextElement.prototype.getTransformToElement = function(element) {};



/**
 * @interface
 */
function SVGAnimatedNumberList() {}
/** @type {SVGNumberList} */ SVGAnimatedNumberList.prototype.baseVal;
/** @type {SVGNumberList} */ SVGAnimatedNumberList.prototype.animVal;



/**
 * @interface
 */
function SVGLength() {}
/** @type {number} */ SVGLength.prototype.unitType;
/** @type {number} */ SVGLength.prototype.value;
/** @type {number} */ SVGLength.prototype.valueInSpecifiedUnits;
/** @type {string} */ SVGLength.prototype.valueAsString;

/**
 * @param {number} unitType
 * @param {number} valueInSpecifiedUnits
 * @throws {DOMException}
 */
SVGLength.prototype.newValueSpecifiedUnits = function(unitType, valueInSpecifiedUnits) {};

/**
 * @param {number} unitType
 * @throws {DOMException}
 */
SVGLength.prototype.convertToSpecifiedUnits = function(unitType) {};



/**
 * @interface
 */
function SVGAnimatedLength() {}
/** @type {SVGLength} */ SVGAnimatedLength.prototype.baseVal;
/** @type {SVGLength} */ SVGAnimatedLength.prototype.animVal;



/**
 * @interface
 */
function SVGAnimatedEnumeration() {}
/** @type {number} */ SVGAnimatedEnumeration.prototype.baseVal;
/** @type {number} */ SVGAnimatedEnumeration.prototype.animVal;



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 */
function SVGTextContentElement() {}
/** @type {SVGAnimatedLength} */ SVGTextContentElement.prototype.textLength;
/** @type {SVGAnimatedEnumeration} */ SVGTextContentElement.prototype.lengthAdjust;

/**
 * @return {number}
 */
SVGTextContentElement.prototype.getNumberOfChars = function() {};

/**
 * @return {number}
 */
SVGTextContentElement.prototype.getComputedTextLength = function() {};

/**
 * @param {number} charnum
 * @param {number} nchars
 * @throws {DOMException}
 * @return {number}
 */
SVGTextContentElement.prototype.getSubStringLength = function(charnum, nchars) {};

/**
 * @param {number} charnum
 * @throws {DOMException}
 * @return {SVGPoint}
 */
SVGTextContentElement.prototype.getStartPositionOfChar = function(charnum) {};

/**
 * @param {number} charnum
 * @throws {DOMException}
 * @return {SVGPoint}
 */
SVGTextContentElement.prototype.getEndPositionOfChar = function(charnum) {};

/**
 * @param {number} charnum
 * @throws {DOMException}
 * @return {SVGRect}
 */
SVGTextContentElement.prototype.getExtentOfChar = function(charnum) {};

/**
 * @param {number} charnum
 * @throws {DOMException}
 * @return {number}
 */
SVGTextContentElement.prototype.getRotationOfChar = function(charnum) {};

/**
 * @param {SVGPoint} point
 * @return {number}
 */
SVGTextContentElement.prototype.getCharNumAtPosition = function(point) {};

/**
 * @param {number} charnum
 * @param {number} nchars
 * @throws {DOMException}
 */
SVGTextContentElement.prototype.selectSubString = function(charnum, nchars) {};
// Members of SVGTests
/** @type {SVGStringList} */ SVGTextContentElement.prototype.requiredFeatures;
/** @type {SVGStringList} */ SVGTextContentElement.prototype.requiredExtensions;
/** @type {SVGStringList} */ SVGTextContentElement.prototype.systemLanguage;

/**
 * @param {string} extension
 * @return {boolean}
 */
SVGTextContentElement.prototype.hasExtension = function(extension) {};
// Members of SVGLangSpace
/** @type {string} */ SVGTextContentElement.prototype.xmllang;
/** @type {string} */ SVGTextContentElement.prototype.xmlspace;
// Members of SVGExternalResourcesRequired
/** @type {SVGAnimatedBoolean} */ SVGTextContentElement.prototype.externalResourcesRequired;
// Members of SVGStylable
/** @type {SVGAnimatedString} */ SVGTextContentElement.prototype.className;
/** @type {CSSStyleDeclaration} */ SVGTextContentElement.prototype.style;

/**
 * @param {string} name
 * @return {CSSValue}
 */
SVGTextContentElement.prototype.getPresentationAttribute = function(name) {};



/**
 * @constructor
 * @extends {SVGTextContentElement}
 */
function SVGTextPositioningElement() {}
/** @type {SVGAnimatedLengthList} */ SVGTextPositioningElement.prototype.x;
/** @type {SVGAnimatedLengthList} */ SVGTextPositioningElement.prototype.y;
/** @type {SVGAnimatedLengthList} */ SVGTextPositioningElement.prototype.dx;
/** @type {SVGAnimatedLengthList} */ SVGTextPositioningElement.prototype.dy;
/** @type {SVGAnimatedNumberList} */ SVGTextPositioningElement.prototype.rotate;



/**
 * @interface
 */
function SVGMatrix() {}
/** @type {number} */ SVGMatrix.prototype.a;
/** @type {number} */ SVGMatrix.prototype.b;
/** @type {number} */ SVGMatrix.prototype.c;
/** @type {number} */ SVGMatrix.prototype.d;
/** @type {number} */ SVGMatrix.prototype.e;
/** @type {number} */ SVGMatrix.prototype.f;

/**
 * @param {SVGMatrix} secondMatrix
 * @return {SVGMatrix}
 */
SVGMatrix.prototype.multiply = function(secondMatrix) {};

/**
 * @throws {SVGException}
 * @return {SVGMatrix}
 */
SVGMatrix.prototype.inverse = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @return {SVGMatrix}
 */
SVGMatrix.prototype.translate = function(x, y) {};

/**
 * @param {number} scaleFactor
 * @return {SVGMatrix}
 */
SVGMatrix.prototype.scale = function(scaleFactor) {};

/**
 * @param {number} scaleFactorX
 * @param {number} scaleFactorY
 * @return {SVGMatrix}
 */
SVGMatrix.prototype.scaleNonUniform = function(scaleFactorX, scaleFactorY) {};

/**
 * @param {number} angle
 * @return {SVGMatrix}
 */
SVGMatrix.prototype.rotate = function(angle) {};

/**
 * @param {number} x
 * @param {number} y
 * @throws {SVGException}
 * @return {SVGMatrix}
 */
SVGMatrix.prototype.rotateFromVector = function(x, y) {};

/**
 * @return {SVGMatrix}
 */
SVGMatrix.prototype.flipX = function() {};

/**
 * @return {SVGMatrix}
 */
SVGMatrix.prototype.flipY = function() {};

/**
 * @param {number} angle
 * @return {SVGMatrix}
 */
SVGMatrix.prototype.skewX = function(angle) {};

/**
 * @param {number} angle
 * @return {SVGMatrix}
 */
SVGMatrix.prototype.skewY = function(angle) {};



/**
 * @interface
 */
function SVGTransform() {}
/** @type {number} */ SVGTransform.prototype.type;
/** @type {SVGMatrix} */ SVGTransform.prototype.matrix;
/** @type {number} */ SVGTransform.prototype.angle;

/**
 * @param {SVGMatrix} matrix
 * @throws {DOMException}
 */
SVGTransform.prototype.setMatrix = function(matrix) {};

/**
 * @param {number} tx
 * @param {number} ty
 * @throws {DOMException}
 */
SVGTransform.prototype.setTranslate = function(tx, ty) {};

/**
 * @param {number} sx
 * @param {number} sy
 * @throws {DOMException}
 */
SVGTransform.prototype.setScale = function(sx, sy) {};

/**
 * @param {number} angle
 * @param {number} cx
 * @param {number} cy
 * @throws {DOMException}
 */
SVGTransform.prototype.setRotate = function(angle, cx, cy) {};

/**
 * @param {number} angle
 * @throws {DOMException}
 */
SVGTransform.prototype.setSkewX = function(angle) {};

/**
 * @param {number} angle
 * @throws {DOMException}
 */
SVGTransform.prototype.setSkewY = function(angle) {};



/**
 * @interface
 */
function SVGTransformList() {}
/** @type {number} */ SVGTransformList.prototype.numberOfItems;

/**
 * @throws {DOMException}
 */
SVGTransformList.prototype.clear = function() {};

/**
 * @param {SVGTransform} newItem
 * @throws {DOMException}
 * @return {SVGTransform}
 */
SVGTransformList.prototype.initialize = function(newItem) {};

/**
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGTransform}
 */
SVGTransformList.prototype.getItem = function(index) {};

/**
 * @param {SVGTransform} newItem
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGTransform}
 */
SVGTransformList.prototype.insertItemBefore = function(newItem, index) {};

/**
 * @param {SVGTransform} newItem
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGTransform}
 */
SVGTransformList.prototype.replaceItem = function(newItem, index) {};

/**
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGTransform}
 */
SVGTransformList.prototype.removeItem = function(index) {};

/**
 * @param {SVGTransform} newItem
 * @throws {DOMException}
 * @return {SVGTransform}
 */
SVGTransformList.prototype.appendItem = function(newItem) {};

/**
 * @param {SVGMatrix} matrix
 * @return {SVGTransform}
 */
SVGTransformList.prototype.createSVGTransformFromMatrix = function(matrix) {};

/**
 * @throws {DOMException}
 * @return {SVGTransform}
 */
SVGTransformList.prototype.consolidate = function() {};



/**
 * @interface
 */
function SVGAnimatedTransformList() {}
/** @type {SVGTransformList} */ SVGAnimatedTransformList.prototype.baseVal;
/** @type {SVGTransformList} */ SVGAnimatedTransformList.prototype.animVal;



/**
 * @interface
 */
function SVGLocatable() {}
/** @type {SVGElement} */ SVGLocatable.prototype.nearestViewportElement;
/** @type {SVGElement} */ SVGLocatable.prototype.farthestViewportElement;

/**
 * @return {SVGRect}
 */
SVGLocatable.prototype.getBBox = function() {};

/**
 * @return {SVGMatrix}
 */
SVGLocatable.prototype.getCTM = function() {};

/**
 * @return {SVGMatrix}
 */
SVGLocatable.prototype.getScreenCTM = function() {};

/**
 * @param {SVGElement} element
 * @throws {SVGException}
 * @return {SVGMatrix}
 */
SVGLocatable.prototype.getTransformToElement = function(element) {};



/**
 * @interface
 * @extends {SVGLocatable}
 */
function SVGTransformable() {}
/** @type {SVGAnimatedTransformList} */ SVGTransformable.prototype.transform;
// Members of SVGLocatable
/** @type {SVGElement} */ SVGTransformable.prototype.nearestViewportElement;
/** @type {SVGElement} */ SVGTransformable.prototype.farthestViewportElement;

/**
 * @return {SVGRect}
 */
SVGTransformable.prototype.getBBox = function() {};

/**
 * @return {SVGMatrix}
 */
SVGTransformable.prototype.getCTM = function() {};

/**
 * @return {SVGMatrix}
 */
SVGTransformable.prototype.getScreenCTM = function() {};

/**
 * @param {SVGElement} element
 * @throws {SVGException}
 * @return {SVGMatrix}
 */
SVGTransformable.prototype.getTransformToElement = function(element) {};



/**
 * @interface
 */
function SVGStringList() {}
/** @type {number} */ SVGStringList.prototype.numberOfItems;

/**
 * @throws {DOMException}
 */
SVGStringList.prototype.clear = function() {};

/**
 * @param {string} newItem
 * @throws {DOMException}
 * @return {string}
 */
SVGStringList.prototype.initialize = function(newItem) {};

/**
 * @param {number} index
 * @throws {DOMException}
 * @return {string}
 */
SVGStringList.prototype.getItem = function(index) {};

/**
 * @param {string} newItem
 * @param {number} index
 * @throws {DOMException}
 * @return {string}
 */
SVGStringList.prototype.insertItemBefore = function(newItem, index) {};

/**
 * @param {string} newItem
 * @param {number} index
 * @throws {DOMException}
 * @return {string}
 */
SVGStringList.prototype.replaceItem = function(newItem, index) {};

/**
 * @param {number} index
 * @throws {DOMException}
 * @return {string}
 */
SVGStringList.prototype.removeItem = function(index) {};

/**
 * @param {string} newItem
 * @throws {DOMException}
 * @return {string}
 */
SVGStringList.prototype.appendItem = function(newItem) {};



/**
 * @interface
 */
function SVGTests() {}
/** @type {SVGStringList} */ SVGTests.prototype.requiredFeatures;
/** @type {SVGStringList} */ SVGTests.prototype.requiredExtensions;
/** @type {SVGStringList} */ SVGTests.prototype.systemLanguage;

/**
 * @param {string} extension
 * @return {boolean}
 */
SVGTests.prototype.hasExtension = function(extension) {};



/**
 * @interface
 */
function SVGNumber() {}
/** @type {number} */ SVGNumber.prototype.value;



/**
 * @interface
 */
function SVGAnimatedNumber() {}
/** @type {number} */ SVGAnimatedNumber.prototype.baseVal;
/** @type {number} */ SVGAnimatedNumber.prototype.animVal;



/**
 * @interface
 */
function SVGRect() {}
/** @type {number} */ SVGRect.prototype.x;
/** @type {number} */ SVGRect.prototype.y;
/** @type {number} */ SVGRect.prototype.width;
/** @type {number} */ SVGRect.prototype.height;



/**
 * @interface
 */
function SVGZoomAndPan() {}
/** @type {number} */ SVGZoomAndPan.prototype.zoomAndPan;



/**
 * @interface
 */
function SVGAnimatedRect() {}
/** @type {SVGRect} */ SVGAnimatedRect.prototype.baseVal;
/** @type {SVGRect} */ SVGAnimatedRect.prototype.animVal;



/**
 * @interface
 */
function SVGPreserveAspectRatio() {}
/** @type {number} */ SVGPreserveAspectRatio.prototype.align;
/** @type {number} */ SVGPreserveAspectRatio.prototype.meetOrSlice;



/**
 * @interface
 */
function SVGAnimatedPreserveAspectRatio() {}
/** @type {SVGPreserveAspectRatio} */ SVGAnimatedPreserveAspectRatio.prototype.baseVal;
/** @type {SVGPreserveAspectRatio} */ SVGAnimatedPreserveAspectRatio.prototype.animVal;



/**
 * @interface
 */
function SVGFitToViewBox() {}
/** @type {SVGAnimatedRect} */ SVGFitToViewBox.prototype.viewBox;
/** @type {SVGAnimatedPreserveAspectRatio} */ SVGFitToViewBox.prototype.preserveAspectRatio;



/**
 * @interface
 * @extends {SVGZoomAndPan}
 * @extends {SVGFitToViewBox}
 */
function SVGViewSpec() {}
/** @type {SVGTransformList} */ SVGViewSpec.prototype.transform;
/** @type {SVGElement} */ SVGViewSpec.prototype.viewTarget;
/** @type {string} */ SVGViewSpec.prototype.viewBoxString;
/** @type {string} */ SVGViewSpec.prototype.preserveAspectRatioString;
/** @type {string} */ SVGViewSpec.prototype.transformString;
/** @type {string} */ SVGViewSpec.prototype.viewTargetString;
// Members of SVGZoomAndPan
/** @type {number} */ SVGViewSpec.prototype.zoomAndPan;
// Members of SVGFitToViewBox
/** @type {SVGAnimatedRect} */ SVGViewSpec.prototype.viewBox;
/** @type {SVGAnimatedPreserveAspectRatio} */ SVGViewSpec.prototype.preserveAspectRatio;



/**
 * @interface
 */
function SVGPoint() {}
/** @type {number} */ SVGPoint.prototype.x;
/** @type {number} */ SVGPoint.prototype.y;

/**
 * @param {SVGMatrix} matrix
 * @return {SVGPoint}
 */
SVGPoint.prototype.matrixTransform = function(matrix) {};



/**
 * @interface
 */
function SVGAngle() {}
/** @type {number} */ SVGAngle.prototype.unitType;
/** @type {number} */ SVGAngle.prototype.value;
/** @type {number} */ SVGAngle.prototype.valueInSpecifiedUnits;
/** @type {string} */ SVGAngle.prototype.valueAsString;

/**
 * @param {number} unitType
 * @param {number} valueInSpecifiedUnits
 * @throws {DOMException}
 */
SVGAngle.prototype.newValueSpecifiedUnits = function(unitType, valueInSpecifiedUnits) {};

/**
 * @param {number} unitType
 * @throws {DOMException}
 */
SVGAngle.prototype.convertToSpecifiedUnits = function(unitType) {};



/**
 * @interface
 */
function SVGDocumentEvent() {}

/**
 * @param {string} eventType
 * @return {Event}
 */
SVGDocumentEvent.prototype.createEvent = function(eventType) {};



/**
 * @interface
 */
function SVGViewCSS() {}

/**
 * @param {Element} elt
 * @param {string} pseudoElt
 * @return {CSSStyleDeclaration}
 */
SVGViewCSS.prototype.getComputedStyle = function(elt, pseudoElt) {};



/**
 * @interface
 */
function SVGDocumentCSS() {}

/**
 * @param {Element} elt
 * @param {string} pseudoElt
 * @return {CSSStyleDeclaration}
 */
SVGDocumentCSS.prototype.getOverrideStyle = function(elt, pseudoElt) {};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGLocatable}
 * @implements {SVGFitToViewBox}
 * @implements {SVGZoomAndPan}
 * @implements {SVGDocumentEvent}
 * @implements {SVGViewCSS}
 * @implements {SVGDocumentCSS}
 */
function SVGSVGElement() {}
/** @type {SVGAnimatedLength} */ SVGSVGElement.prototype.x;
/** @type {SVGAnimatedLength} */ SVGSVGElement.prototype.y;
/** @type {SVGAnimatedLength} */ SVGSVGElement.prototype.width;
/** @type {SVGAnimatedLength} */ SVGSVGElement.prototype.height;
/** @type {string} */ SVGSVGElement.prototype.contentScriptType;
/** @type {string} */ SVGSVGElement.prototype.contentStyleType;
/** @type {SVGRect} */ SVGSVGElement.prototype.viewport;
/** @type {number} */ SVGSVGElement.prototype.pixelUnitToMillimeterX;
/** @type {number} */ SVGSVGElement.prototype.pixelUnitToMillimeterY;
/** @type {number} */ SVGSVGElement.prototype.screenPixelToMillimeterX;
/** @type {number} */ SVGSVGElement.prototype.screenPixelToMillimeterY;
/** @type {boolean} */ SVGSVGElement.prototype.useCurrentView;
/** @type {SVGViewSpec} */ SVGSVGElement.prototype.currentView;
/** @type {number} */ SVGSVGElement.prototype.currentScale;
/** @type {SVGPoint} */ SVGSVGElement.prototype.currentTranslate;

/**
 * @param {number} maxWaitMilliseconds
 * @return {number}
 */
SVGSVGElement.prototype.suspendRedraw = function(maxWaitMilliseconds) {};

/**
 * @param {number} suspendHandleID
 */
SVGSVGElement.prototype.unsuspendRedraw = function(suspendHandleID) {};

/**
 */
SVGSVGElement.prototype.unsuspendRedrawAll = function() {};

/**
 */
SVGSVGElement.prototype.forceRedraw = function() {};

/**
 */
SVGSVGElement.prototype.pauseAnimations = function() {};

/**
 */
SVGSVGElement.prototype.unpauseAnimations = function() {};

/**
 * @return {boolean}
 */
SVGSVGElement.prototype.animationsPaused = function() {};

/**
 * @return {number}
 */
SVGSVGElement.prototype.getCurrentTime = function() {};

/**
 * @param {number} seconds
 */
SVGSVGElement.prototype.setCurrentTime = function(seconds) {};

/**
 * @param {SVGRect} rect
 * @param {SVGElement} referenceElement
 * @return {NodeList}
 */
SVGSVGElement.prototype.getIntersectionList = function(rect, referenceElement) {};

/**
 * @param {SVGRect} rect
 * @param {SVGElement} referenceElement
 * @return {NodeList}
 */
SVGSVGElement.prototype.getEnclosureList = function(rect, referenceElement) {};

/**
 * @param {SVGElement} element
 * @param {SVGRect} rect
 * @return {boolean}
 */
SVGSVGElement.prototype.checkIntersection = function(element, rect) {};

/**
 * @param {SVGElement} element
 * @param {SVGRect} rect
 * @return {boolean}
 */
SVGSVGElement.prototype.checkEnclosure = function(element, rect) {};

/**
 */
SVGSVGElement.prototype.deselectAll = function() {};

/**
 * @return {SVGNumber}
 */
SVGSVGElement.prototype.createSVGNumber = function() {};

/**
 * @return {SVGLength}
 */
SVGSVGElement.prototype.createSVGLength = function() {};

/**
 * @return {SVGAngle}
 */
SVGSVGElement.prototype.createSVGAngle = function() {};

/**
 * @return {SVGPoint}
 */
SVGSVGElement.prototype.createSVGPoint = function() {};

/**
 * @return {SVGMatrix}
 */
SVGSVGElement.prototype.createSVGMatrix = function() {};

/**
 * @return {SVGRect}
 */
SVGSVGElement.prototype.createSVGRect = function() {};

/**
 * @return {SVGTransform}
 */
SVGSVGElement.prototype.createSVGTransform = function() {};

/**
 * @param {SVGMatrix} matrix
 * @return {SVGTransform}
 */
SVGSVGElement.prototype.createSVGTransformFromMatrix = function(matrix) {};

/**
 * @param {string} elementId
 * @return {Element}
 */
SVGSVGElement.prototype.getElementById = function(elementId) {};
// Members of SVGTests
/** @type {SVGStringList} */ SVGSVGElement.prototype.requiredFeatures;
/** @type {SVGStringList} */ SVGSVGElement.prototype.requiredExtensions;
/** @type {SVGStringList} */ SVGSVGElement.prototype.systemLanguage;

/**
 * @param {string} extension
 * @return {boolean}
 */
SVGSVGElement.prototype.hasExtension = function(extension) {};
// Members of SVGLangSpace
/** @type {string} */ SVGSVGElement.prototype.xmllang;
/** @type {string} */ SVGSVGElement.prototype.xmlspace;
// Members of SVGExternalResourcesRequired
/** @type {SVGAnimatedBoolean} */ SVGSVGElement.prototype.externalResourcesRequired;
// Members of SVGStylable
/** @type {SVGAnimatedString} */ SVGSVGElement.prototype.className;
/** @type {CSSStyleDeclaration} */ SVGSVGElement.prototype.style;

/**
 * @param {string} name
 * @return {CSSValue}
 */
SVGSVGElement.prototype.getPresentationAttribute = function(name) {};
// Members of SVGLocatable
/** @type {SVGElement} */ SVGSVGElement.prototype.nearestViewportElement;
/** @type {SVGElement} */ SVGSVGElement.prototype.farthestViewportElement;

/**
 * @return {SVGRect}
 */
SVGSVGElement.prototype.getBBox = function() {};

/**
 * @return {SVGMatrix}
 */
SVGSVGElement.prototype.getCTM = function() {};

/**
 * @return {SVGMatrix}
 */
SVGSVGElement.prototype.getScreenCTM = function() {};

/**
 * @param {SVGElement} element
 * @throws {SVGException}
 * @return {SVGMatrix}
 */
SVGSVGElement.prototype.getTransformToElement = function(element) {};
// Members of SVGFitToViewBox
/** @type {SVGAnimatedRect} */ SVGSVGElement.prototype.viewBox;
/** @type {SVGAnimatedPreserveAspectRatio} */ SVGSVGElement.prototype.preserveAspectRatio;
// Members of SVGZoomAndPan
/** @type {number} */ SVGSVGElement.prototype.zoomAndPan;
// Members of SVGDocumentEvent

/**
 * @param {string} eventType
 * @return {Event}
 */
SVGSVGElement.prototype.createEvent = function(eventType) {};
// Members of SVGViewCSS

/**
 * @param {Element} elt
 * @param {string} pseudoElt
 * @return {CSSStyleDeclaration}
 */
SVGSVGElement.prototype.getComputedStyle = function(elt, pseudoElt) {};
// Members of SVGDocumentCSS

/**
 * @param {Element} elt
 * @param {string} pseudoElt
 * @return {CSSStyleDeclaration}
 */
SVGSVGElement.prototype.getOverrideStyle = function(elt, pseudoElt) {};



/**
 * @interface
 */
function SVGAnimatedLengthList() {}
/** @type {SVGLengthList} */ SVGAnimatedLengthList.prototype.baseVal;
/** @type {SVGLengthList} */ SVGAnimatedLengthList.prototype.animVal;



/**
 * @interface
 */
function SVGLengthList() {}
/** @type {number} */ SVGLengthList.prototype.numberOfItems;

/**
 * @throws {DOMException}
 */
SVGLengthList.prototype.clear = function() {};

/**
 * @param {SVGLength} newItem
 * @throws {DOMException}
 * @return {SVGLength}
 */
SVGLengthList.prototype.initialize = function(newItem) {};

/**
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGLength}
 */
SVGLengthList.prototype.getItem = function(index) {};

/**
 * @param {SVGLength} newItem
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGLength}
 */
SVGLengthList.prototype.insertItemBefore = function(newItem, index) {};

/**
 * @param {SVGLength} newItem
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGLength}
 */
SVGLengthList.prototype.replaceItem = function(newItem, index) {};

/**
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGLength}
 */
SVGLengthList.prototype.removeItem = function(index) {};

/**
 * @param {SVGLength} newItem
 * @throws {DOMException}
 * @return {SVGLength}
 */
SVGLengthList.prototype.appendItem = function(newItem) {};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGRectElement() {}
/** @type {SVGAnimatedLength} */ SVGRectElement.prototype.x;
/** @type {SVGAnimatedLength} */ SVGRectElement.prototype.y;
/** @type {SVGAnimatedLength} */ SVGRectElement.prototype.width;
/** @type {SVGAnimatedLength} */ SVGRectElement.prototype.height;
/** @type {SVGAnimatedLength} */ SVGRectElement.prototype.rx;
/** @type {SVGAnimatedLength} */ SVGRectElement.prototype.ry;
// Members of SVGTests
/** @type {SVGStringList} */ SVGRectElement.prototype.requiredFeatures;
/** @type {SVGStringList} */ SVGRectElement.prototype.requiredExtensions;
/** @type {SVGStringList} */ SVGRectElement.prototype.systemLanguage;

/**
 * @param {string} extension
 * @return {boolean}
 */
SVGRectElement.prototype.hasExtension = function(extension) {};
// Members of SVGLangSpace
/** @type {string} */ SVGRectElement.prototype.xmllang;
/** @type {string} */ SVGRectElement.prototype.xmlspace;
// Members of SVGExternalResourcesRequired
/** @type {SVGAnimatedBoolean} */ SVGRectElement.prototype.externalResourcesRequired;
// Members of SVGStylable
/** @type {SVGAnimatedString} */ SVGRectElement.prototype.className;
/** @type {CSSStyleDeclaration} */ SVGRectElement.prototype.style;

/**
 * @param {string} name
 * @return {CSSValue}
 */
SVGRectElement.prototype.getPresentationAttribute = function(name) {};
// Members of SVGTransformable
/** @type {SVGAnimatedTransformList} */ SVGRectElement.prototype.transform;
// Members of SVGLocatable
/** @type {SVGElement} */ SVGRectElement.prototype.nearestViewportElement;
/** @type {SVGElement} */ SVGRectElement.prototype.farthestViewportElement;

/**
 * @return {SVGRect}
 */
SVGRectElement.prototype.getBBox = function() {};

/**
 * @return {SVGMatrix}
 */
SVGRectElement.prototype.getCTM = function() {};

/**
 * @return {SVGMatrix}
 */
SVGRectElement.prototype.getScreenCTM = function() {};

/**
 * @param {SVGElement} element
 * @throws {SVGException}
 * @return {SVGMatrix}
 */
SVGRectElement.prototype.getTransformToElement = function(element) {};



/**
 * @interface
 */
function SVGPathSeg() {}
/** @type {number} */ SVGPathSeg.prototype.pathSegType;
/** @type {string} */ SVGPathSeg.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegClosePath() {}
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegClosePath.prototype.pathSegType;
/** @type {string} */ SVGPathSegClosePath.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegMovetoRel() {}
/** @type {number} */ SVGPathSegMovetoRel.prototype.x;
/** @type {number} */ SVGPathSegMovetoRel.prototype.y;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegMovetoRel.prototype.pathSegType;
/** @type {string} */ SVGPathSegMovetoRel.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegMovetoAbs() {}
/** @type {number} */ SVGPathSegMovetoAbs.prototype.x;
/** @type {number} */ SVGPathSegMovetoAbs.prototype.y;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegMovetoAbs.prototype.pathSegType;
/** @type {string} */ SVGPathSegMovetoAbs.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegLinetoAbs() {}
/** @type {number} */ SVGPathSegLinetoAbs.prototype.x;
/** @type {number} */ SVGPathSegLinetoAbs.prototype.y;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegLinetoAbs.prototype.pathSegType;
/** @type {string} */ SVGPathSegLinetoAbs.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegLinetoRel() {}
/** @type {number} */ SVGPathSegLinetoRel.prototype.x;
/** @type {number} */ SVGPathSegLinetoRel.prototype.y;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegLinetoRel.prototype.pathSegType;
/** @type {string} */ SVGPathSegLinetoRel.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegLinetoHorizontalRel() {}
/** @type {number} */ SVGPathSegLinetoHorizontalRel.prototype.x;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegLinetoHorizontalRel.prototype.pathSegType;
/** @type {string} */ SVGPathSegLinetoHorizontalRel.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegLinetoHorizontalAbs() {}
/** @type {number} */ SVGPathSegLinetoHorizontalAbs.prototype.x;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegLinetoHorizontalAbs.prototype.pathSegType;
/** @type {string} */ SVGPathSegLinetoHorizontalAbs.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegLinetoVerticalAbs() {}
/** @type {number} */ SVGPathSegLinetoVerticalAbs.prototype.y;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegLinetoVerticalAbs.prototype.pathSegType;
/** @type {string} */ SVGPathSegLinetoVerticalAbs.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegLinetoVerticalRel() {}
/** @type {number} */ SVGPathSegLinetoVerticalRel.prototype.y;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegLinetoVerticalRel.prototype.pathSegType;
/** @type {string} */ SVGPathSegLinetoVerticalRel.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoQuadraticSmoothRel() {}
/** @type {number} */ SVGPathSegCurvetoQuadraticSmoothRel.prototype.x;
/** @type {number} */ SVGPathSegCurvetoQuadraticSmoothRel.prototype.y;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegCurvetoQuadraticSmoothRel.prototype.pathSegType;
/** @type {string} */ SVGPathSegCurvetoQuadraticSmoothRel.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoQuadraticSmoothAbs() {}
/** @type {number} */ SVGPathSegCurvetoQuadraticSmoothAbs.prototype.x;
/** @type {number} */ SVGPathSegCurvetoQuadraticSmoothAbs.prototype.y;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegCurvetoQuadraticSmoothAbs.prototype.pathSegType;
/** @type {string} */ SVGPathSegCurvetoQuadraticSmoothAbs.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoCubicSmoothRel() {}
/** @type {number} */ SVGPathSegCurvetoCubicSmoothRel.prototype.x;
/** @type {number} */ SVGPathSegCurvetoCubicSmoothRel.prototype.y;
/** @type {number} */ SVGPathSegCurvetoCubicSmoothRel.prototype.x2;
/** @type {number} */ SVGPathSegCurvetoCubicSmoothRel.prototype.y2;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegCurvetoCubicSmoothRel.prototype.pathSegType;
/** @type {string} */ SVGPathSegCurvetoCubicSmoothRel.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoCubicSmoothAbs() {}
/** @type {number} */ SVGPathSegCurvetoCubicSmoothAbs.prototype.x;
/** @type {number} */ SVGPathSegCurvetoCubicSmoothAbs.prototype.y;
/** @type {number} */ SVGPathSegCurvetoCubicSmoothAbs.prototype.x2;
/** @type {number} */ SVGPathSegCurvetoCubicSmoothAbs.prototype.y2;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegCurvetoCubicSmoothAbs.prototype.pathSegType;
/** @type {string} */ SVGPathSegCurvetoCubicSmoothAbs.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegArcRel() {}
/** @type {number} */ SVGPathSegArcRel.prototype.x;
/** @type {number} */ SVGPathSegArcRel.prototype.y;
/** @type {number} */ SVGPathSegArcRel.prototype.r1;
/** @type {number} */ SVGPathSegArcRel.prototype.r2;
/** @type {number} */ SVGPathSegArcRel.prototype.angle;
/** @type {boolean} */ SVGPathSegArcRel.prototype.largeArcFlag;
/** @type {boolean} */ SVGPathSegArcRel.prototype.sweepFlag;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegArcRel.prototype.pathSegType;
/** @type {string} */ SVGPathSegArcRel.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegArcAbs() {}
/** @type {number} */ SVGPathSegArcAbs.prototype.x;
/** @type {number} */ SVGPathSegArcAbs.prototype.y;
/** @type {number} */ SVGPathSegArcAbs.prototype.r1;
/** @type {number} */ SVGPathSegArcAbs.prototype.r2;
/** @type {number} */ SVGPathSegArcAbs.prototype.angle;
/** @type {boolean} */ SVGPathSegArcAbs.prototype.largeArcFlag;
/** @type {boolean} */ SVGPathSegArcAbs.prototype.sweepFlag;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegArcAbs.prototype.pathSegType;
/** @type {string} */ SVGPathSegArcAbs.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoQuadraticRel() {}
/** @type {number} */ SVGPathSegCurvetoQuadraticRel.prototype.x;
/** @type {number} */ SVGPathSegCurvetoQuadraticRel.prototype.y;
/** @type {number} */ SVGPathSegCurvetoQuadraticRel.prototype.x1;
/** @type {number} */ SVGPathSegCurvetoQuadraticRel.prototype.y1;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegCurvetoQuadraticRel.prototype.pathSegType;
/** @type {string} */ SVGPathSegCurvetoQuadraticRel.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoQuadraticAbs() {}
/** @type {number} */ SVGPathSegCurvetoQuadraticAbs.prototype.x;
/** @type {number} */ SVGPathSegCurvetoQuadraticAbs.prototype.y;
/** @type {number} */ SVGPathSegCurvetoQuadraticAbs.prototype.x1;
/** @type {number} */ SVGPathSegCurvetoQuadraticAbs.prototype.y1;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegCurvetoQuadraticAbs.prototype.pathSegType;
/** @type {string} */ SVGPathSegCurvetoQuadraticAbs.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoCubicRel() {}
/** @type {number} */ SVGPathSegCurvetoCubicRel.prototype.x;
/** @type {number} */ SVGPathSegCurvetoCubicRel.prototype.y;
/** @type {number} */ SVGPathSegCurvetoCubicRel.prototype.x1;
/** @type {number} */ SVGPathSegCurvetoCubicRel.prototype.y1;
/** @type {number} */ SVGPathSegCurvetoCubicRel.prototype.x2;
/** @type {number} */ SVGPathSegCurvetoCubicRel.prototype.y2;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegCurvetoCubicRel.prototype.pathSegType;
/** @type {string} */ SVGPathSegCurvetoCubicRel.prototype.pathSegTypeAsLetter;



/**
 * @interface
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoCubicAbs() {}
/** @type {number} */ SVGPathSegCurvetoCubicAbs.prototype.x;
/** @type {number} */ SVGPathSegCurvetoCubicAbs.prototype.y;
/** @type {number} */ SVGPathSegCurvetoCubicAbs.prototype.x1;
/** @type {number} */ SVGPathSegCurvetoCubicAbs.prototype.y1;
/** @type {number} */ SVGPathSegCurvetoCubicAbs.prototype.x2;
/** @type {number} */ SVGPathSegCurvetoCubicAbs.prototype.y2;
// Members of SVGPathSeg
/** @type {number} */ SVGPathSegCurvetoCubicAbs.prototype.pathSegType;
/** @type {string} */ SVGPathSegCurvetoCubicAbs.prototype.pathSegTypeAsLetter;



/**
 * @interface
 */
function SVGPathSegList() {}
/** @type {number} */ SVGPathSegList.prototype.numberOfItems;

/**
 * @throws {DOMException}
 */
SVGPathSegList.prototype.clear = function() {};

/**
 * @param {SVGPathSeg} newItem
 * @throws {DOMException}
 * @return {SVGPathSeg}
 */
SVGPathSegList.prototype.initialize = function(newItem) {};

/**
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGPathSeg}
 */
SVGPathSegList.prototype.getItem = function(index) {};

/**
 * @param {SVGPathSeg} newItem
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGPathSeg}
 */
SVGPathSegList.prototype.insertItemBefore = function(newItem, index) {};

/**
 * @param {SVGPathSeg} newItem
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGPathSeg}
 */
SVGPathSegList.prototype.replaceItem = function(newItem, index) {};

/**
 * @param {number} index
 * @throws {DOMException}
 * @return {SVGPathSeg}
 */
SVGPathSegList.prototype.removeItem = function(index) {};

/**
 * @param {SVGPathSeg} newItem
 * @throws {DOMException}
 * @return {SVGPathSeg}
 */
SVGPathSegList.prototype.appendItem = function(newItem) {};



/**
 * @interface
 */
function SVGAnimatedPathData() {}
/** @type {SVGPathSegList} */ SVGAnimatedPathData.prototype.pathSegList;
/** @type {SVGPathSegList} */ SVGAnimatedPathData.prototype.normalizedPathSegList;
/** @type {SVGPathSegList} */ SVGAnimatedPathData.prototype.animatedPathSegList;
/** @type {SVGPathSegList} */ SVGAnimatedPathData.prototype.animatedNormalizedPathSegList;



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 * @implements {SVGAnimatedPathData}
 */
function SVGPathElement() {}
/** @type {SVGAnimatedNumber} */ SVGPathElement.prototype.pathLength;

/**
 * @return {number}
 */
SVGPathElement.prototype.getTotalLength = function() {};

/**
 * @param {number} distance
 * @return {SVGPoint}
 */
SVGPathElement.prototype.getPointAtLength = function(distance) {};

/**
 * @param {number} distance
 * @return {number}
 */
SVGPathElement.prototype.getPathSegAtLength = function(distance) {};

/**
 * @return {SVGPathSegClosePath}
 */
SVGPathElement.prototype.createSVGPathSegClosePath = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @return {SVGPathSegMovetoAbs}
 */
SVGPathElement.prototype.createSVGPathSegMovetoAbs = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {SVGPathSegMovetoRel}
 */
SVGPathElement.prototype.createSVGPathSegMovetoRel = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {SVGPathSegLinetoAbs}
 */
SVGPathElement.prototype.createSVGPathSegLinetoAbs = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {SVGPathSegLinetoRel}
 */
SVGPathElement.prototype.createSVGPathSegLinetoRel = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @return {SVGPathSegCurvetoCubicAbs}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function(x, y, x1, y1, x2, y2) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @return {SVGPathSegCurvetoCubicRel}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function(x, y, x1, y1, x2, y2) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} x1
 * @param {number} y1
 * @return {SVGPathSegCurvetoQuadraticAbs}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function(x, y, x1, y1) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} x1
 * @param {number} y1
 * @return {SVGPathSegCurvetoQuadraticRel}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function(x, y, x1, y1) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} r1
 * @param {number} r2
 * @param {number} angle
 * @param {boolean} largeArcFlag
 * @param {boolean} sweepFlag
 * @return {SVGPathSegArcAbs}
 */
SVGPathElement.prototype.createSVGPathSegArcAbs = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} r1
 * @param {number} r2
 * @param {number} angle
 * @param {boolean} largeArcFlag
 * @param {boolean} sweepFlag
 * @return {SVGPathSegArcRel}
 */
SVGPathElement.prototype.createSVGPathSegArcRel = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) {};

/**
 * @param {number} x
 * @return {SVGPathSegLinetoHorizontalAbs}
 */
SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function(x) {};

/**
 * @param {number} x
 * @return {SVGPathSegLinetoHorizontalRel}
 */
SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function(x) {};

/**
 * @param {number} y
 * @return {SVGPathSegLinetoVerticalAbs}
 */
SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function(y) {};

/**
 * @param {number} y
 * @return {SVGPathSegLinetoVerticalRel}
 */
SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function(y) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} x2
 * @param {number} y2
 * @return {SVGPathSegCurvetoCubicSmoothAbs}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function(x, y, x2, y2) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} x2
 * @param {number} y2
 * @return {SVGPathSegCurvetoCubicSmoothRel}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function(x, y, x2, y2) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {SVGPathSegCurvetoQuadraticSmoothAbs}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {SVGPathSegCurvetoQuadraticSmoothRel}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function(x, y) {};
// Members of SVGTests
/** @type {SVGStringList} */ SVGPathElement.prototype.requiredFeatures;
/** @type {SVGStringList} */ SVGPathElement.prototype.requiredExtensions;
/** @type {SVGStringList} */ SVGPathElement.prototype.systemLanguage;

/**
 * @param {string} extension
 * @return {boolean}
 */
SVGPathElement.prototype.hasExtension = function(extension) {};
// Members of SVGLangSpace
/** @type {string} */ SVGPathElement.prototype.xmllang;
/** @type {string} */ SVGPathElement.prototype.xmlspace;
// Members of SVGExternalResourcesRequired
/** @type {SVGAnimatedBoolean} */ SVGPathElement.prototype.externalResourcesRequired;
// Members of SVGStylable
/** @type {SVGAnimatedString} */ SVGPathElement.prototype.className;
/** @type {CSSStyleDeclaration} */ SVGPathElement.prototype.style;

/**
 * @param {string} name
 * @return {CSSValue}
 */
SVGPathElement.prototype.getPresentationAttribute = function(name) {};
// Members of SVGTransformable
/** @type {SVGAnimatedTransformList} */ SVGPathElement.prototype.transform;
// Members of SVGLocatable
/** @type {SVGElement} */ SVGPathElement.prototype.nearestViewportElement;
/** @type {SVGElement} */ SVGPathElement.prototype.farthestViewportElement;

/**
 * @return {SVGRect}
 */
SVGPathElement.prototype.getBBox = function() {};

/**
 * @return {SVGMatrix}
 */
SVGPathElement.prototype.getCTM = function() {};

/**
 * @return {SVGMatrix}
 */
SVGPathElement.prototype.getScreenCTM = function() {};

/**
 * @param {SVGElement} element
 * @throws {SVGException}
 * @return {SVGMatrix}
 */
SVGPathElement.prototype.getTransformToElement = function(element) {};
// Members of SVGAnimatedPathData
/** @type {SVGPathSegList} */ SVGPathElement.prototype.pathSegList;
/** @type {SVGPathSegList} */ SVGPathElement.prototype.normalizedPathSegList;
/** @type {SVGPathSegList} */ SVGPathElement.prototype.animatedPathSegList;
/** @type {SVGPathSegList} */ SVGPathElement.prototype.animatedNormalizedPathSegList;
