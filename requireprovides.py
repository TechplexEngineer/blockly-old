#!/usr/bin/python
# Outputs requires for each namespace provided by the specified files.

""" Utility for outputing goog.require for every thing that the set of
files provides.

usage: %prog [options] [file1.js ...]
"""

import source, optparse, sys

parser = optparse.OptionParser(__doc__);
parser.add_option('-o',
                  '--output_file',
                  dest='output_file',
                  action='store',
                  help=('If specified, write output to this path instead of '
                        'writing to standard output.'))
parser.add_option('-p',
                  '--provide',
                  dest='provide',
                  action='append',
                  default=[],
                  help='What this file provides.')
(options, args) = parser.parse_args();

# Make our output pipe.
if options.output_file:
    out = open(options.output_file, 'w')
else:
    out = sys.stdout

# Write the header.
out.writelines(['// This file was autogenerated by %s.\n' % sys.argv[0],
                '// Please do not edit.\n'])

# If there are any provides to declare, do so.
if options.provide:
    for provide in options.provide:
        out.write("goog.provide('%s');\n" % provide)
    out.write('\n');

# Gather the namespaces provided by the args as requirements to print.
requires = set()
for filename in args:
    src = source.Source(source.GetFileContents(filename))
    requires.update(set(src.provides))

# Sort the requirements and print them
requires = list(requires)
requires.sort()
for provide in requires:
    out.write("goog.require('%s');\n" % provide)
out.write('\n\n')
